version: '3'
services:
  backend:
    image: backend
    build:
      args:
        user: ${USER}
        uid: ${USER_ID}
      context: ./data/backend
      dockerfile: dockerfile
    container_name: backend
    restart: unless-stopped
    command: php-fpm -R
    environment:
      DB_HOST: mysql
      DB_USERNAME: "${MYSQL_USER}"
      DB_PASSWORD: "${MYSQL_PASSWORD}"
      DB_DATABASE: "${MYSQL_DATABASE}"
      # REDIS_PASSWORD: "${REDIS_PASSWORD}"
      DOMAIN: "${DOMAIN}"

    volumes:
      - ./data/phpfpm/zzz-docker.conf:/usr/local/etc/php-fpm.d/zzz-docker.conf
      - ${APP_PATH_HOST}:/var/www
      - ./logs/php-errors:/var/www/storage/logs
      - ./data/ssl:/data/ssl
    ports:
      - 9000:9000
    links:
      - mysql
  # cron:
  #   build:
  #     context: ./data/cron
  #     dockerfile: dockerfile.cron
  #   image: cron
  #   # command: chmod +x /var/run.sh
  #   restart: always
  queue:
    build:
      args:
        user: ${USER}
        uid: ${USER_ID}
      context: ./data/backend
      dockerfile: dockerfile.queue
    container_name: queue
    image: backend-queue
    depends_on:
      - mysql
    # command: php /var/www/artisan migrate
    restart: unless-stopped
    working_dir: /var/www/
    environment:
      DB_HOST: mysql
      DB_USERNAME: "${MYSQL_USER}"
      DB_PASSWORD: "${MYSQL_PASSWORD}"
      DB_DATABASE: "${MYSQL_DATABASE}"
      # REDIS_PASSWORD: "${REDIS_PASSWORD}"
      DOMAIN: "${DOMAIN}"
    volumes:
      - ${APP_PATH_HOST}:/var/www
      - ./logs/php-errors:/var/www/storage/logs  
  nginx:
    image: nginx:latest
    restart: unless-stopped
    ports:
      - 80:80
      - 443:443
    volumes:
      - ./data/nginx:/etc/nginx/conf.d
      - ${APP_PATH_HOST}:/var/www
      - ./logs/nginx:/var/log/nginx
      - ./data/certbot/conf:/etc/letsencrypt
      - ./data/certbot/www:/var/www/certbot
    links:
      - backend
    command: "/bin/sh -c 'while :; do sleep 6h & wait $${!}; nginx -s reload; done & nginx -g \"daemon off;\"'"
  mysql:
    image: mysql
    # platform: linux/x86_64
    volumes:
      - ./data/mysql-dump:/docker-entrypoint-initdb.d
      - ${Db_PATH_HOST}:/var/lib/mysql
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: "${MYSQL_ROOT_PASSWORD}"
      MYSQL_DATABASE: "${MYSQL_DATABASE}"
      MYSQL_USER: "${MYSQL_USER}"
      MYSQL_PASSWORD: "${MYSQL_PASSWORD}"
    command: ['mysqld', '--character-set-server=utf8mb4', '--collation-server=utf8mb4_unicode_ci']
  phpmyadmin:
    image: phpmyadmin
    restart: always
    ports:
      - 8080:80
    environment:
      PMA_ARBITRARY: 0
      PMA_HOST: mysql
      # PMA_USER: "${MYSQL_USER}"
      # PMA_PASSWORD: "${MYSQL_PASSWORD}"
  redis:
    image: "redis:alpine"
    command: redis-server # --requirepass ${REDIS_PASSWORD}
    # ports:
    #  - "6379:6379"
    volumes:
     - ${Db_PATH_HOST}/redis-data:/var/lib/redis

    environment:
     - REDIS_REPLICATION_MODE=master
  websockets:
    container_name: websocket-server
    restart: always
    build:
      context: ./data/websocket-server
      dockerfile: dockerfile.echo      
    ports:
        - 6001:6001
    volumes:
    - ./data/websocket-server:/app
  certbot:
    image: certbot/certbot
    volumes:
      - ./data/certbot/conf:/etc/letsencrypt
      - ./data/certbot/www:/var/www/certbot
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"
